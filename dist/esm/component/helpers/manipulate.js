import castType from"../../utils/cast-type.js";function manipulate(t,o,p,e,r){if("object"==typeof t.propsType){const e=t.propsType[p];void 0!==e&&(o=castType(o,e))}if(r&&(e=t.propsConvertOnFly),t.propsConvert&&t.propsConvertOnFly===e&&"object"==typeof t.propsConvert){const e=t.propsConvert[p],r=t[e]||e;if("function"==typeof r)return r.call(t,o)}if(r&&(e=t.propsComputedOnFly),t.propsComputed&&t.propsComputedOnFly===e&&"object"==typeof t.propsComputed){let e=t._computedCache.get(p);if(void 0===e)e=new Map,t._computedCache.set(p,e);else{const t=e.get(o);if(void 0!==t)return t}const r=t.propsComputed[p],n=t[r]||r;if("function"==typeof n){const p=n.call(t,o);return e.set(o,p),p}}return o}export default manipulate;